# Generated by Django 3.2.13 on 2023-03-06 07:31

import cloudinary_storage.storage
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductManufacturingUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proceed_to_update_your_profile', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='proceed_to_update_your_profile/%m/%d/')),
                ('submit_most_recent_financial_statement', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='submit_most_recent_financial_statement/%m/%d/')),
                ('upload_all_levy_recipt', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='upload_all_levy_recipt/%m/%d/')),
                ('upload_Product_update_report', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='upload_Product_update_report/%m/%d/')),
                ('member', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.memeber')),
            ],
        ),
        migrations.CreateModel(
            name='MergerOfCompanies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_request_letter', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='upload_request_letter/%m/%d/')),
                ('submit_most_recent_financial_statement', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='submit_most_recent_financial_statement/%m/%d/')),
                ('upload_dues_reciept', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='Upload_dues_reciept/%m/%d/')),
                ('upload_membership_cert_for_both_companies', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='Upload_membership_cert_for_both_companies/%m/%d/')),
                ('member', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.memeber')),
            ],
        ),
        migrations.CreateModel(
            name='MemberOfReissuanceOfCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attach_membership_receipt', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='attach_membership_receipt/%m/%d/')),
                ('note', models.TextField()),
                ('member', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.memeber')),
            ],
        ),
        migrations.CreateModel(
            name='FactoryLocationUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proceed_to_update_your_profile', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='proceed_to_update_your_profile/%m/%d/')),
                ('submit_most_recent_financial_statement', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='submit_most_recent_financial_statement/%m/%d/')),
                ('upload_dues_reciept', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='Upload_dues_reciept/%m/%d/')),
                ('upload_factory_inspection_report', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='upload_factory_inspection_report/%m/%d/')),
                ('member', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.memeber')),
            ],
        ),
        migrations.CreateModel(
            name='DeactivationOfMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deactivation_request', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='deactivation_request/%m/%d/')),
                ('submit_most_recent_financial_statement', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='submit_most_recent_financial_statement/%m/%d/')),
                ('upload_all_levy_recipt', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='upload_all_levy_recipt/%m/%d/')),
                ('member', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.memeber')),
            ],
        ),
        migrations.CreateModel(
            name='ChangeOfName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attach_membership_certificate', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='attach_membership_certificate/%m/%d/')),
                ('membership_due_receipt', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='membership_due_receipt/%m/%d/')),
                ('upload_financial_statement', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='upload_financial_statement/%m/%d/')),
                ('upload_incorporation_certificate', models.FileField(storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='upload_incorporation_certificate/%m/%d/')),
                ('member', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.memeber')),
            ],
        ),
    ]
